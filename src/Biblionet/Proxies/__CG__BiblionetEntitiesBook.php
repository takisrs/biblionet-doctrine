<?php

namespace Biblionet\Proxies\__CG__\Biblionet\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Book extends \Biblionet\Entities\Book implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'biblionet_id', 'title', 'coverImage', 'subtitle', 'parallelTitle', 'alternativeTitle', 'originalTitle', 'isbn', 'firstPublishDate', 'currentPublishDate', 'place', 'type', 'editionNo', 'cover', 'dimensions', 'pagesNo', 'availability', 'price', 'vat', 'weight', 'ageFrom', 'ageTo', 'summary', 'language', 'languageOriginal', 'languageTranslatedFrom', 'series', 'seriesNo', 'subSeries', 'subSeriesNo', 'multiVolumeTitle', 'category', 'book_contributor_associations'];
        }

        return ['__isInitialized__', 'id', 'biblionet_id', 'title', 'coverImage', 'subtitle', 'parallelTitle', 'alternativeTitle', 'originalTitle', 'isbn', 'firstPublishDate', 'currentPublishDate', 'place', 'type', 'editionNo', 'cover', 'dimensions', 'pagesNo', 'availability', 'price', 'vat', 'weight', 'ageFrom', 'ageTo', 'summary', 'language', 'languageOriginal', 'languageTranslatedFrom', 'series', 'seriesNo', 'subSeries', 'subSeriesNo', 'multiVolumeTitle', 'category', 'book_contributor_associations'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Book $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setBiblionetId($biblionetId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBiblionetId', [$biblionetId]);

        return parent::setBiblionetId($biblionetId);
    }

    /**
     * {@inheritDoc}
     */
    public function getBiblionetId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBiblionetId', []);

        return parent::getBiblionetId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setCoverImage($coverImage)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCoverImage', [$coverImage]);

        return parent::setCoverImage($coverImage);
    }

    /**
     * {@inheritDoc}
     */
    public function getCoverImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCoverImage', []);

        return parent::getCoverImage();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubtitle($subtitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubtitle', [$subtitle]);

        return parent::setSubtitle($subtitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubtitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubtitle', []);

        return parent::getSubtitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setParallelTitle($parallelTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParallelTitle', [$parallelTitle]);

        return parent::setParallelTitle($parallelTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getParallelTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParallelTitle', []);

        return parent::getParallelTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setAlternativeTitle($alternativeTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAlternativeTitle', [$alternativeTitle]);

        return parent::setAlternativeTitle($alternativeTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getAlternativeTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAlternativeTitle', []);

        return parent::getAlternativeTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setOriginalTitle($originalTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOriginalTitle', [$originalTitle]);

        return parent::setOriginalTitle($originalTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getOriginalTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOriginalTitle', []);

        return parent::getOriginalTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsbn($isbn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsbn', [$isbn]);

        return parent::setIsbn($isbn);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsbn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsbn', []);

        return parent::getIsbn();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstPublishDate($firstPublishDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstPublishDate', [$firstPublishDate]);

        return parent::setFirstPublishDate($firstPublishDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstPublishDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstPublishDate', []);

        return parent::getFirstPublishDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setCurrentPublishDate($currentPublishDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCurrentPublishDate', [$currentPublishDate]);

        return parent::setCurrentPublishDate($currentPublishDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getCurrentPublishDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCurrentPublishDate', []);

        return parent::getCurrentPublishDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlace($place)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlace', [$place]);

        return parent::setPlace($place);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlace()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlace', []);

        return parent::getPlace();
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setEditionNo($editionNo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEditionNo', [$editionNo]);

        return parent::setEditionNo($editionNo);
    }

    /**
     * {@inheritDoc}
     */
    public function getEditionNo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEditionNo', []);

        return parent::getEditionNo();
    }

    /**
     * {@inheritDoc}
     */
    public function setCover($cover)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCover', [$cover]);

        return parent::setCover($cover);
    }

    /**
     * {@inheritDoc}
     */
    public function getCover()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCover', []);

        return parent::getCover();
    }

    /**
     * {@inheritDoc}
     */
    public function setDimensions($dimensions)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDimensions', [$dimensions]);

        return parent::setDimensions($dimensions);
    }

    /**
     * {@inheritDoc}
     */
    public function getDimensions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDimensions', []);

        return parent::getDimensions();
    }

    /**
     * {@inheritDoc}
     */
    public function setPagesNo($pagesNo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPagesNo', [$pagesNo]);

        return parent::setPagesNo($pagesNo);
    }

    /**
     * {@inheritDoc}
     */
    public function getPagesNo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPagesNo', []);

        return parent::getPagesNo();
    }

    /**
     * {@inheritDoc}
     */
    public function setAvailability($availability)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAvailability', [$availability]);

        return parent::setAvailability($availability);
    }

    /**
     * {@inheritDoc}
     */
    public function getAvailability()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAvailability', []);

        return parent::getAvailability();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrice($price)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrice', [$price]);

        return parent::setPrice($price);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrice', []);

        return parent::getPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setVat($vat)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVat', [$vat]);

        return parent::setVat($vat);
    }

    /**
     * {@inheritDoc}
     */
    public function getVat()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVat', []);

        return parent::getVat();
    }

    /**
     * {@inheritDoc}
     */
    public function setWeight($weight)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWeight', [$weight]);

        return parent::setWeight($weight);
    }

    /**
     * {@inheritDoc}
     */
    public function getWeight()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWeight', []);

        return parent::getWeight();
    }

    /**
     * {@inheritDoc}
     */
    public function setAgeFrom($ageFrom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAgeFrom', [$ageFrom]);

        return parent::setAgeFrom($ageFrom);
    }

    /**
     * {@inheritDoc}
     */
    public function getAgeFrom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAgeFrom', []);

        return parent::getAgeFrom();
    }

    /**
     * {@inheritDoc}
     */
    public function setAgeTo($ageTo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAgeTo', [$ageTo]);

        return parent::setAgeTo($ageTo);
    }

    /**
     * {@inheritDoc}
     */
    public function getAgeTo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAgeTo', []);

        return parent::getAgeTo();
    }

    /**
     * {@inheritDoc}
     */
    public function setSummary($summary)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSummary', [$summary]);

        return parent::setSummary($summary);
    }

    /**
     * {@inheritDoc}
     */
    public function getSummary()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSummary', []);

        return parent::getSummary();
    }

    /**
     * {@inheritDoc}
     */
    public function setLanguage($language)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLanguage', [$language]);

        return parent::setLanguage($language);
    }

    /**
     * {@inheritDoc}
     */
    public function getLanguage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLanguage', []);

        return parent::getLanguage();
    }

    /**
     * {@inheritDoc}
     */
    public function setLanguageOriginal($languageOriginal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLanguageOriginal', [$languageOriginal]);

        return parent::setLanguageOriginal($languageOriginal);
    }

    /**
     * {@inheritDoc}
     */
    public function getLanguageOriginal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLanguageOriginal', []);

        return parent::getLanguageOriginal();
    }

    /**
     * {@inheritDoc}
     */
    public function setLanguageTranslatedFrom($languageTranslatedFrom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLanguageTranslatedFrom', [$languageTranslatedFrom]);

        return parent::setLanguageTranslatedFrom($languageTranslatedFrom);
    }

    /**
     * {@inheritDoc}
     */
    public function getLanguageTranslatedFrom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLanguageTranslatedFrom', []);

        return parent::getLanguageTranslatedFrom();
    }

    /**
     * {@inheritDoc}
     */
    public function setSeries($series)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSeries', [$series]);

        return parent::setSeries($series);
    }

    /**
     * {@inheritDoc}
     */
    public function getSeries()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSeries', []);

        return parent::getSeries();
    }

    /**
     * {@inheritDoc}
     */
    public function setSeriesNo($seriesNo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSeriesNo', [$seriesNo]);

        return parent::setSeriesNo($seriesNo);
    }

    /**
     * {@inheritDoc}
     */
    public function getSeriesNo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSeriesNo', []);

        return parent::getSeriesNo();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubSeries($subSeries)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubSeries', [$subSeries]);

        return parent::setSubSeries($subSeries);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubSeries()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubSeries', []);

        return parent::getSubSeries();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubSeriesNo($subSeriesNo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubSeriesNo', [$subSeriesNo]);

        return parent::setSubSeriesNo($subSeriesNo);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubSeriesNo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubSeriesNo', []);

        return parent::getSubSeriesNo();
    }

    /**
     * {@inheritDoc}
     */
    public function setMultiVolumeTitle($multiVolumeTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMultiVolumeTitle', [$multiVolumeTitle]);

        return parent::setMultiVolumeTitle($multiVolumeTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getMultiVolumeTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMultiVolumeTitle', []);

        return parent::getMultiVolumeTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategory($category)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategory', [$category]);

        return parent::setCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategory', []);

        return parent::getCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function addBookContributorAssociation(\Biblionet\Entities\BookContributorAssociation $bookContributorAssociation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addBookContributorAssociation', [$bookContributorAssociation]);

        return parent::addBookContributorAssociation($bookContributorAssociation);
    }

    /**
     * {@inheritDoc}
     */
    public function removeBookContributorAssociation(\Biblionet\Entities\BookContributorAssociation $bookContributorAssociation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeBookContributorAssociation', [$bookContributorAssociation]);

        return parent::removeBookContributorAssociation($bookContributorAssociation);
    }

    /**
     * {@inheritDoc}
     */
    public function getBookContributorAssociations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBookContributorAssociations', []);

        return parent::getBookContributorAssociations();
    }

}
